{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["house1","house2","App","react_default","a","createElement","className","App_Containers","Component","Containers","props","App_Container","numberOfPhotos","imageSource1","imageSource2","title","address","description","addedOn","addedBy","price","priceDetail","agentLogo","phoneNumber","Container","App_Gallery","App_DescriptionBox","App_LikeButton","App_PriceBox","App_ContactsBox","Gallery","App_PhotosIcons","App_Photo","imageSource","imageAlt","PhotosIcons","Photo","src","alt","DescriptionBox","PriceBox","ContactsBox","App_Logo","logoSource","App_EmailAgent","Logo","EmailAgent","LikeButton","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.154666ed.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nlet house1 = {\n  numberOfPhotos:34,\n  imageSource1:\"https://media.rightmove.co.uk/dir/58k/57943/68757967/57943_9060918_IMG_01_0000_max_656x437.jpg\",\n  imageSource2:\"https://media.rightmove.co.uk/dir/58k/57943/68757967/57943_9060918_IMG_02_0000_max_656x437.jpg\",\n  title:\"3 bedroom character property for sale\",\n  address:\"Townfield Lane, Mollington, Chester\",\n  description: `AN EXCITING ADDITION TO THE PROPERTY MARKET! \"Ardmore\" is quite simply a stunning character filled Victorian home, abundant with light filled rooms of impressive proportions. Boasting a contemporary interior the property has`,\n  addedOn:\"27/11/2018\",\n  addedBy:\"Bradshaw Farnham & Lea\",\n  price:\"£500,000\",\n  priceDetail:\"Offers Over\",\n  agentLogo:\"https://bflhomes.com/images/logo-bflhomes.png\",\n  phoneNumber:\"0151 954 0322\",\n}\n\nlet house2 = {\n  numberOfPhotos:15,\n  imageSource1:\"https://media.rightmove.co.uk/dir/176k/175901/59030625/175901_9187737_IMG_01_0000_max_656x437.jpg\",\n  imageSource2:\"https://media.rightmove.co.uk/dir/176k/175901/59030625/175901_9187737_IMG_02_0000_max_656x437.jpg\",\n  title:\"4 bedroom detached house for sale\",\n  address:\"Curzon Park South, Curzon Park, Chester\",\n  description: \"Situated within a popular and convenient residential location, this 1970's, four bedroom detached house provides well proportioned accommodation that requires modernisation and has scope for further enhancement. The house has well\",\n  addedOn:\"21/12/2018\",\n  addedBy:\"Rickitt Partnership\",\n  price:\"£500,000\",\n  priceDetail:\"\",\n  agentLogo:\"https://media.rightmove.co.uk/176k/175901/branch_photo_175901_0000.png\",\n  phoneNumber:\"01244 955183\",\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Containers/>\n      </div>\n    );\n  }\n}\n\nconst Containers = (props) => {\n  return (\n    <div className=\"containers\">\n        <Container numberOfPhotos=\"34\" imageSource1={house1.imageSource1} imageSource2={house1.imageSource2} title={house1.title} address={house1.address} description={house1.description} addedOn={house1.addedOn} addedBy={house1.addedBy} price={house1.price} priceDetail={house1.priceDetail} agentLogo={house1.agentLogo} phoneNumber={house1.phoneNumber}/>\n        <Container numberOfPhotos=\"15\" imageSource1={house2.imageSource1} imageSource2={house2.imageSource2} title={house2.title} address={house2.address} description={house2.description} addedOn={house2.addedOn} addedBy={house2.addedBy} price={house2.price} priceDetail={house2.priceDetail} agentLogo={house2.agentLogo} phoneNumber={house2.phoneNumber}/>\n    </div>\n  )\n}\n\nconst Container = (props) => {\n  return (\n    <div className=\"container\">\n      <Gallery imageSource1={props.imageSource1} imageSource2={props.imageSource2} numberOfPhotos={props.numberOfPhotos} />\n      <DescriptionBox title={props.title} address={props.address} description={props.description} addedOn={props.addedOn} addedBy={props.addedBy}/>\n      <LikeButton />\n      <PriceBox price={props.price} priceDetail={props.priceDetail}/>\n      <ContactsBox agentLogo={props.agentLogo} addedBy={props.addedBy} phoneNumber={props.phoneNumber} />\n    </div>\n  )\n}\n\nconst Gallery = (props) => {\n  return (\n    <div className=\"gallery\">\n      <PhotosIcons numberOfPhotos={props.numberOfPhotos} />\n      <Photo imageSource={props.imageSource1} imageAlt=\"Photo 1\" />\n      <Photo imageSource={props.imageSource2} imageAlt=\"Photo 2\" />\n    </div>\n  )\n}\n\nconst PhotosIcons = (props) => {\n  return (\n    <div className=\"photosIcons\">\n      <i className=\"fas fa-solar-panel\"></i> <i className=\"fas fa-camera\"></i> <span>{props.numberOfPhotos}</span>\n    </div>\n  )\n}\n\nconst Photo = (props) => {\n  return (\n    <div>\n      <img className=\"galleryImg\" src={props.imageSource} alt={props.imageAlt}/>\n    </div>\n  )\n}\n\nconst DescriptionBox = (props) => {\n  return (\n    <div className=\"descriptionBox\">\n      <h3 className=\"title\">{props.title}</h3>\n      <p className=\"address\">{props.address}</p>\n      <p className=\"description\">{props.description}</p>\n      <p className=\"added\">Added on {props.addedOn} by {props.addedBy}</p>\n    </div>\n  )\n}\n\nconst PriceBox = (props) => {\n  return (\n    <div className=\"priceBox\">\n      <p className=\"price\">{props.price}</p>\n      <p>{props.priceDetail}</p>\n    </div>\n  )\n}\n\nconst ContactsBox = (props) => {\n  return (\n    <div className=\"contactsBox\">\n        <Logo logoSource={props.agentLogo} addedBy={props.addedBy}/>\n      <p>\n        <span className=\"phoneNumber\">{props.phoneNumber}</span><br />\n        <span className=\"localCallRate\">Local call rate</span>\n      </p>\n      <EmailAgent/>\n    </div>\n  )\n}\n\nconst Logo = (props) => {\n  return (\n    <div>\n      <img src={props.logoSource} className=\"agentLogo\" alt={props.addedBy+\" logo\"}/>\n    </div>\n  )\n}\n\nconst EmailAgent = (props) => {\n  return (\n    <div>\n      <p>\n        <i className=\"far fa-envelope\"></i> Email agent\n      </p>\n    </div>\n  )\n}\n\nconst LikeButton = (props) => {\n  return (\n    <div className=\"likeButton\">\n      <i className=\"far fa-heart\"></i>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}